#!/usr/bin/env kos

import io
import base.*

fun count_antinodes1(antennas, width, height)
{
    const map = []
    map.resize(width * height, false)

    var count = 0

    fun check_position(x, y)
    {
        if x < 0 || x >= width || y < 0 || y >= height {
            return
        }

        const offs = y * width + x

        if ! map[offs] {
            count += 1
            map[offs] = true
        }
    }

    for const _, locations in antennas {
        for const i in range(locations.size) {
            for const j in range(i + 1, locations.size) {
                const a1 = locations[i]
                const a2 = locations[j]

                const delta_x = a2.x - a1.x
                const delta_y = a2.y - a1.y

                check_position(a2.x + delta_x, a2.y + delta_y)
                check_position(a1.x - delta_x, a1.y - delta_y)
            }
        }
    }

    return count
}

fun count_antinodes2(antennas, width, height)
{
    const map = []
    map.resize(width * height, false)

    var count = 0

    fun check_position(x, y)
    {
        if x < 0 || x >= width || y < 0 || y >= height {
            return
        }

        const offs = y * width + x

        if ! map[offs] {
            count += 1
            map[offs] = true
        }
    }

    for const _, locations in antennas {
        for const i in range(locations.size) {
            for const j in range(i + 1, locations.size) {
                const a1 = locations[i]
                const a2 = locations[j]

                const delta_x = a2.x - a1.x
                const delta_y = a2.y - a1.y

                var x = a2.x
                var y = a2.y
                repeat {
                    check_position(x, y)
                    x += delta_x
                    y += delta_y
                } while x >= 0 && x < width && y >= 0 && y < height

                x = a1.x
                y = a1.y
                repeat {
                    check_position(x, y)
                    x -= delta_x
                    y -= delta_y
                } while x >= 0 && x < width && y >= 0 && y < height
            }
        }
    }

    return count
}

public fun main(_, input_file_name = "input08.txt")
{
    const antennas = {}

    var width  = 0
    var height = 0

    with const file = io.open(input_file_name) {
        for const y, line in enumerate(file.read_lines()) {

            height = y + 1

            const sline = line.strip()
            if width == 0 {
                width = sline.size
            }

            for const x, freq in enumerate(sline.strip()) {
                if freq != "." {
                    if ! (freq in antennas) {
                        antennas[freq] = []
                    }
                    antennas[freq].push({x: x, y: y})
                }
            }
        }
    }

    print("Part 1 answer is \(count_antinodes1(antennas, width, height))")
    print("Part 2 answer is \(count_antinodes2(antennas, width, height))")
}
